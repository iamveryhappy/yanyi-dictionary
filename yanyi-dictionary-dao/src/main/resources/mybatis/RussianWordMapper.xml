<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.logbook.configcenter.dao.ConfigDAO">

    <resultMap id="ConfigMap" type="com.jd.logbook.configcenter.model.ConfigDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="config_type" property="configType" jdbcType="VARCHAR"/>
        <result column="config_name" property="configName" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="BIGINT"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="created_at" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modified_at" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--columns config-->
    <sql id="allColumn">
        id, config_type, config_name, content, version, description, created_at, modified_at
    </sql>
    <!-- query conditions -->
    <sql id="sqlCondition">
        <if test="null != id and id != ''">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="null != configType and configType != ''">
            and config_type = #{configType,jdbcType=VARCHAR}
        </if>
        <if test="null != configName and configName != ''">
            and config_name = #{configName,jdbcType=VARCHAR}
        </if>
        <if test="null != content and content != ''">
            and content = #{content,jdbcType=VARCHAR}
        </if>
        <if test="null != version and version != ''">
            and version = #{version,jdbcType=VARCHAR}
        </if>
        <if test="null != description and description != ''">
            and description = #{description,jdbcType=VARCHAR}
        </if>
        <if test="null != createTime and createTime != ''">
            and created_at = #{createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="null != updateTime and updateTime != ''">
            and modified_at = #{updateTime,jdbcType=TIMESTAMP}
        </if>
    </sql>

    <!-- insert sql -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.jd.logbook.configcenter.model.ConfigDO">
        insert into
        config(config_type, config_name, content, version, description, created_at, modified_at)
        values
        (#{configType,jdbcType=VARCHAR}, #{configName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteConfig" parameterType="com.jd.logbook.configcenter.model.ConfigDO">
        DELETE FROM config
        WHERE 1=1
        <include refid="sqlCondition"/>
    </delete>

    <delete id="batchDeleteConfigs" parameterType="java.util.List">
        DELETE FROM config
        WHERE id IN
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <update id="updateConfig" parameterType="com.jd.logbook.configcenter.model.ConfigDO">
        UPDATE config
        SET
        <if test="null != content and content != ''">
            content = #{content, jdbcType=VARCHAR}
        </if>
        <if test="null != discription and discription != ''">
            , description = #{description,jdbcType=VARCHAR}
        </if>
        <if test="null != updateTime and updateTime != ''">
            , modified_at = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        WHERE
        config_type = #{configType, jdbcType=VARCHAR} AND config_name = #{configName, jdbcType=VARCHAR}
    </update>

    <update id="updateConfigs" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" open="" close="" separator=";">
            UPDATE config
            <set>
                content = #{item.content}, description = #{item.description}, modified_at = #{item.updateTime}, version = version + 1
            </set>
            WHERE
            config_type = #{item.configType} AND config_name = #{item.configName}
        </foreach>
    </update>

    <!--  select sql-->
    <select id="queryConfigByCondition" parameterType="com.jd.logbook.configcenter.model.ConfigDO"
            resultMap="ConfigMap">
        SELECT
        <include refid="allColumn"/>
        FROM config
        WHERE 1=1
        <if test="null != id and id != ''">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="null != configType and configType != ''">
            and config_type = #{configType,jdbcType=VARCHAR}
        </if>
        <if test="null != configName and configName != ''">
            and config_name = #{configName,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="queryConfigListByCondition" resultMap="ConfigMap">
        SELECT
        <include refid="allColumn"/>
        FROM config
        WHERE config_type = #{configType,jdbcType=VARCHAR}
        and config_name IN
        <foreach item="item" index="index" collection="configNames" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getCountForConfigs" parameterType="com.jd.logbook.configcenter.model.ConfigQueryDO" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM config
        WHERE 1=1
            <if test="null != id and id != ''">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="null != configType and configType != ''">
                and config_type = #{configType,jdbcType=VARCHAR}
            </if>
            <if test="null != configName and configName != ''">
                and config_name = #{configName,jdbcType=VARCHAR}
            </if>
    </select>

    <select id="getAllConfigTypes" resultType="java.lang.String">
        SELECT  config_type
        FROM config
        GROUP BY config_type
    </select>

    <select id="findByQuery" parameterType="com.jd.logbook.configcenter.mybatis.bean.QPageQuery"
            resultMap="ConfigMap">
        SELECT
        <include refid="allColumn"/>
        FROM config
        WHERE 1=1
        <if test="null != query.id and query.id != ''">
            and id = #{query.id,jdbcType=BIGINT}
        </if>
        <if test="null != query.configType and query.configType != ''">
            and config_type = #{query.configType,jdbcType=VARCHAR}
        </if>
        <if test="null != query.configName and query.configName != ''">
            and config_name = #{query.configName,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="findById" resultMap="ConfigMap" parameterType="java.lang.Long">
        SELECT
        <include refid="allColumn"/>
        FROM config
        WHERE id = #{id, jdbcType=BIGINT}
    </select>
</mapper>
